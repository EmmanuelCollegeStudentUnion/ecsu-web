# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.14
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
    keys:
      - v1-git-lfs

      - run:
          name: "Install git lfs"
          command: |
            if ! [ -x "$(command -v git-lfs)" ]; then
                curl -L -o /tmp/git-lfs.tar.gz \
                  https://github.com/git-lfs/git-lfs/releases/download/v2.4.0/git-lfs-linux-amd64-2.4.0.tar.gz
                tar xf /tmp/git-lfs.tar.gz -C /tmp
                sudo /tmp/git-lfs-2.4.0/install.sh
            fi

      - save_cache:
          key: v1-gif-lfs
          paths:
            - /usr/local/bin/git-lfs
              
      - run: git lfs pull


      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install --frozen-lockfile

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
        
      - run:
          name: Generate
          command:
              yarn build
      
      - save_cache:
          paths:
            - dist
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
  deploy:
    machine:
        enabled: true
    steps:    
      - restore_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Create archive
          command: |
              cd ~/repo 
              tar -czvf /tmp/deploy.tar.gz ./dist
      - run:
          name: Upload
          command:
              scp /tmp/deploy.tar.gz nh487@files.srcf.net:~/deploy/deploy.tar.gz

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build              

    

